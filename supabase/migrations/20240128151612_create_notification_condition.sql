alter table "public"."reports" drop constraint "reports_timestamp_key";

drop index if exists "public"."reports_timestamp_key";

create table "public"."conditions" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "condition" smallint not null,
    "metadata" jsonb not null default '{}'::jsonb,
    "date" date not null
);


create table "public"."notifications" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "email" text,
    "phone" text,
    "date" date,
    "condition" smallint
);


alter table "public"."reports" drop column "timestamp";

alter table "public"."reports" add column "condition_date" timestamp with time zone not null;

alter table "public"."reports" add column "creation_date" timestamp with time zone not null default now();

alter table "public"."reports" add column "modify_date" timestamp with time zone default now();

CREATE UNIQUE INDEX condition_pkey ON public.conditions USING btree (id);

CREATE UNIQUE INDEX conditions_date_key ON public.conditions USING btree (date);

CREATE UNIQUE INDEX notifications_pkey ON public.notifications USING btree (id);

CREATE UNIQUE INDEX reports_pkey ON public.reports USING btree (condition_date);

alter table "public"."conditions" add constraint "condition_pkey" PRIMARY KEY using index "condition_pkey";

alter table "public"."notifications" add constraint "notifications_pkey" PRIMARY KEY using index "notifications_pkey";

alter table "public"."reports" add constraint "reports_pkey" PRIMARY KEY using index "reports_pkey";

alter table "public"."conditions" add constraint "conditions_date_key" UNIQUE using index "conditions_date_key";

set check_function_bodies = off;

CREATE OR REPLACE FUNCTION public.post_notify()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
    -- calls pg_net function net.http_post
    -- sends request to postman API
    raise notice 'POST_NOTIFY';
    perform "net"."http_post"(
      'http://172.17.0.1:54321/functions/v1/notify'::text,
      jsonb_build_object(
        'old_row', to_jsonb(old.*),
        'new_row', to_jsonb(new.*)
      ),
      headers:='{"Content-Type": "application/json", "Authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFlYXR4b2NpeW5ld2VndHNhanZlIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MDU5MTcxMzUsImV4cCI6MjAyMTQ5MzEzNX0.E4VIReQAzwFcsw_yUIXz_TOl-V_EWXbb1zsOmK8Ytbs"}'::jsonb
    ) as request_id;
    return new;
END $function$
;

grant delete on table "public"."conditions" to "anon";

grant insert on table "public"."conditions" to "anon";

grant references on table "public"."conditions" to "anon";

grant select on table "public"."conditions" to "anon";

grant trigger on table "public"."conditions" to "anon";

grant truncate on table "public"."conditions" to "anon";

grant update on table "public"."conditions" to "anon";

grant delete on table "public"."conditions" to "authenticated";

grant insert on table "public"."conditions" to "authenticated";

grant references on table "public"."conditions" to "authenticated";

grant select on table "public"."conditions" to "authenticated";

grant trigger on table "public"."conditions" to "authenticated";

grant truncate on table "public"."conditions" to "authenticated";

grant update on table "public"."conditions" to "authenticated";

grant delete on table "public"."conditions" to "service_role";

grant insert on table "public"."conditions" to "service_role";

grant references on table "public"."conditions" to "service_role";

grant select on table "public"."conditions" to "service_role";

grant trigger on table "public"."conditions" to "service_role";

grant truncate on table "public"."conditions" to "service_role";

grant update on table "public"."conditions" to "service_role";

grant delete on table "public"."notifications" to "anon";

grant insert on table "public"."notifications" to "anon";

grant references on table "public"."notifications" to "anon";

grant select on table "public"."notifications" to "anon";

grant trigger on table "public"."notifications" to "anon";

grant truncate on table "public"."notifications" to "anon";

grant update on table "public"."notifications" to "anon";

grant delete on table "public"."notifications" to "authenticated";

grant insert on table "public"."notifications" to "authenticated";

grant references on table "public"."notifications" to "authenticated";

grant select on table "public"."notifications" to "authenticated";

grant trigger on table "public"."notifications" to "authenticated";

grant truncate on table "public"."notifications" to "authenticated";

grant update on table "public"."notifications" to "authenticated";

grant delete on table "public"."notifications" to "service_role";

grant insert on table "public"."notifications" to "service_role";

grant references on table "public"."notifications" to "service_role";

grant select on table "public"."notifications" to "service_role";

grant trigger on table "public"."notifications" to "service_role";

grant truncate on table "public"."notifications" to "service_role";

grant update on table "public"."notifications" to "service_role";

CREATE TRIGGER notify_on_condition AFTER INSERT OR UPDATE ON public.conditions FOR EACH STATEMENT EXECUTE FUNCTION post_notify();